openapi: "3.0.0"
info:
  version: 1.0.0
  title: What to Watch Backend API
  license:
    name: MIT
paths:
  /items:
    get:
      summary: List all items
      operationId: listItems
      tags:
        - items
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
        - name: lastKey
          in: query
          description: The last key that has been seen. Used for pagination.
          required: false
          schema:
            type: string
            maximum: 100
            format: int32
        - name: timestamp
          in: query
          description: Used in conjunction with page to avoid double-counting; the end timestamp of items to pull.
      responses:
        '200':
          description: A paged array of items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${listItemsArn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        contentHandling: "CONVERT_TO_TEXT"
    post:
      summary: Create an item
      operationId: createItem
      tags:
        - items
      responses:
        '200':
          description: The newly created item with id included.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${createItemArn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        contentHandling: "CONVERT_TO_TEXT"
  /items/{itemId}:
    get:
      summary: Info for a specific item
      operationId: showItemById
      tags:
        - items
      parameters:
        - name: itemId
          in: path
          required: true
          description: The id of the item to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${showItemsArn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
        contentHandling: "CONVERT_TO_TEXT"
components:
  schemas:
    Item:
      type: object
      required:
        - itemId
        - name
        - status
      properties:
        itemId:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
        tags:
          type: array
          maxItems: 50
          items:
            tag:
              type: string
    Items:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Item"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
